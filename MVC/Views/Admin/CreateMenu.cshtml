@{
    ViewData["Title"] = "GetUser";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

@*@using Entity.Concrete;
@model Menu

<h1 class="bg-info text-white">Yeni Menü Oluşturma</h1>
@if (TempData["result"] != null)
{
    <script>
        alert("İşlem başarılı");
    </script>
}
@if (TempData["resultError"] != null)
{
    <script>
        alert("İşlem başarısız");
    </script>
}
<a asp-action="GetMenu" asp-controller="Admin" class="btn btn-secondary">Menü Listesi</a>
<div asp-validation-summary="All" class="text-danger"></div>

<form asp-action="CreateMenu" asp-controller="Admin" method="post">

    <div class="form-group">
        <label asp-for="Name"></label>
        <input asp-for="Name" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Description"></label>
        <input asp-for="Description" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="Price"></label>
        <input asp-for="Price" class="form-control" />
    </div>
    <div class="form-group">
        <label asp-for="MenuCategory"></label>
        <input asp-for="MenuCategory" class="form-control" />
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="imageFile" />
        </div>
    </div>
   @* <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="Image" />
        </div>
    </div>*@
    @* <div class="form-group">
    <label asp-for="State"></label>
    <input asp-for="State" class="form-control" />
    </div>*@
    @* <div class="form-check form-switch d-flex align-items-center mb-3">
    <label asp-for="State"  class="form-check-label mb-0 ms-2" for="rememberMe"></label>
    <input asp-for="State" class="form-check-input" type="checkbox" id="rememberMe">

    </div>*@
    @*<div class="form-group form-check">
        <label asp-for="State" class="form-check-label">
            <input class="form-check-input" asp-for="State" /> Aktiflik Durumu
        </label>
    </div>
    <button type="submit" class="btn btn-primary">Kaydet</button>
</form>*@


@using Entity.Concrete;
@model Menu

<h1 class="bg-info text-white">Yeni Menü Oluşturma</h1>
@if (TempData["result"] != null)
{
    <script>
        alert("İşlem başarılı");
    </script>
}
@if (TempData["resultError"] != null)
{
    <script>
        alert("İşlem başarısız");
    </script>
}
<a asp-action="GetMenu" asp-controller="Admin" class="btn btn-secondary">Menü Listesi</a>
<div asp-validation-summary="All" class="text-danger"></div>

@using (Html.BeginForm("CreateMenu", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-group">
        @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
        </div>
    </div>
    <div class="form-group">
        @Html.LabelFor(model => model.MenuCategory, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.MenuCategory, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.MenuCategory, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Price, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Image, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            <input type="file" name="imageFile" />
        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">
            <input type="submit" value="Kaydet" class="btn btn-primary" />
        </div>
    </div>
}
